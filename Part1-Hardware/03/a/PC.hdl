/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t) 
 * 
 * Description from Nand2Tetris project materials. 
 */
 
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    //inc -> load -> reset 

    //increase -> lastOut+1
    Inc16(in=outloop, out=incOut);
    Mux16(a=outloop, b=incOut, sel=inc, out=muxIncOut);

    //load
    Mux16(a=muxIncOut, b=in, sel = load, out=muxLoadOut);

    //reset
    Mux16(a=muxLoadOut, b=false, sel =reset, out=muxResetOut);

    //*load-logic for efficient - register
    Or(a=load, b=inc, out=loadORinc);
    Or(a=loadORinc, b=reset, out=shouldLoad);

    Register(in=muxResetOut, load = shouldLoad, out=outloop, out=out);
}
