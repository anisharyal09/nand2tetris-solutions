/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out. 
 * 
 * Description from Nand2Tetris project materials. 
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Address selection for each registers
    DMux8Way(in=load, sel = address, a= loada, b= loadb, c= loadc, d= loadd, e= loade, f= loadf, g= loadg, h= loadh);

    //Register implemetation
    Register(in=in, load = loada, out=outa);
    Register(in=in, load = loadb, out=outb);
    Register(in=in, load = loadc, out=outc);
    Register(in=in, load = loadd, out=outd);
    Register(in=in, load = loade, out=oute);
    Register(in=in, load = loadf, out=outf);
    Register(in=in, load = loadg, out=outg);
    Register(in=in, load = loadh, out=outh);

    Mux8Way16(a= outa, b= outb, c= outc, d= outd, e= oute, f= outf, g= outg, h= outh, sel=address, out=out);
}
