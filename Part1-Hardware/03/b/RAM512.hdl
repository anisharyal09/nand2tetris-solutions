/**
 * Memory of 512 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 * 
 * Description from Nand2Tetris project materials. 
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // access
    // We have 8 RAM8 inside each RAM64, so RAM64 is accessed by using 3-MSBs
    DMux8Way(in=load, sel = address[6..8], a= loada, b= loadb, c= loadc, d= loadd, e= loade, f= loadf, g= loadg, h= loadh);

    //RAM64 implemetation
    //Selecting rest 6-LSBs chooses the registers inside of RAM8 that's inside RAM64
    RAM64(in=in, load = loada, address=address[0..5], out=outa);
    RAM64(in=in, load = loadb, address=address[0..5], out=outb);
    RAM64(in=in, load = loadc, address=address[0..5], out=outc);
    RAM64(in=in, load = loadd, address=address[0..5], out=outd);
    RAM64(in=in, load = loade, address=address[0..5], out=oute);
    RAM64(in=in, load = loadf, address=address[0..5], out=outf);
    RAM64(in=in, load = loadg, address=address[0..5], out=outg);
    RAM64(in=in, load = loadh, address=address[0..5], out=outh);

    Mux8Way16(a= outa, b= outb, c= outc, d= outd, e= oute, f= outf, g= outg, h= outh, sel=address[6..8], out=out); 
}
